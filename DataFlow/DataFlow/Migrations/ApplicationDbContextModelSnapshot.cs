// <auto-generated />
using System;
using DataFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataFlow.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataFlow.Model.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActiveClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActiveOpenningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebitTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FinancialClassId")
                        .HasColumnType("int");

                    b.Property<decimal>("PassiveClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PassiveOpenningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialClassId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("DataFlow.Model.FileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GeneratedFloat")
                        .HasColumnType("real");

                    b.Property<int>("GeneratedInteger")
                        .HasColumnType("int");

                    b.Property<string>("RussianString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilesData");
                });

            modelBuilder.Entity("DataFlow.Model.FinancialClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoadedFileId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoadedFileId");

                    b.ToTable("FinancialClasses");
                });

            modelBuilder.Entity("DataFlow.Model.LoadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoadedFiles");
                });

            modelBuilder.Entity("DataFlow.Model.BankAccount", b =>
                {
                    b.HasOne("DataFlow.Model.FinancialClass", "FinancialClass")
                        .WithMany("BankAccounts")
                        .HasForeignKey("FinancialClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialClass");
                });

            modelBuilder.Entity("DataFlow.Model.FinancialClass", b =>
                {
                    b.HasOne("DataFlow.Model.LoadedFile", "LoadedFile")
                        .WithMany("FinancialClasses")
                        .HasForeignKey("LoadedFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoadedFile");
                });

            modelBuilder.Entity("DataFlow.Model.FinancialClass", b =>
                {
                    b.Navigation("BankAccounts");
                });

            modelBuilder.Entity("DataFlow.Model.LoadedFile", b =>
                {
                    b.Navigation("FinancialClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
